// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum AccountType {
  HARVESTER
  ORGANISER
}

enum SallaryType {
  MONEY
  GOODS
}

enum EventStatus {
  CREATED
  PROGRESS
  ARCHIVED
  CANCELLED
}

enum EventPresenceStatus {
  NOT_PRESENT
  DID_NOT_ARRIVE
  PRESENT
  LEFT
}

enum EventAssignmentStatus {
  ACTIVE
  SIGNED_OFF
}

enum ColorVariant {
  CHERRY
  LEMON
  LIME
  APPLE
  ORANGE
}

model User {
  id                String             @id @default(cuid())
  email             String             @unique
  createdAt         DateTime           @default(now())
  password          String
  name              String
  verificationToken String?
  phoneNumber       String?
  type              AccountType?
  avatarURL         String?
  EventAssignment   EventAssignment[]
  AnnouncementItem  AnnouncementItem[]
  Event             Event[]
}

model Location {
  id          String  @id @default(cuid())
  locationLat Float
  locationLon Float
  address     String
  city        String
  name        String?
  Event       Event[]
}

model Event {
  id            String      @id @default(cuid())
  name          String
  createdAt     DateTime    @default(now())
  User          User        @relation(fields: [userId], references: [id])
  happeningAt   DateTime
  description   String?
  thumbnailURL  String?
  setupComplete Boolean     @default(false)
  Location      Location    @relation(fields: [locationId], references: [id])
  capacity      Int
  sallaryType   SallaryType

  sallaryAmount      Float
  sallaryUnit        String?
  sallaryProductName String?

  toolingRequired       String?
  toolingProvided       String?
  status                EventStatus             @default(CREATED)
  EventAssignment       EventAssignment[]
  AnnouncementItem      AnnouncementItem[]
  HarmonogramItem       HarmonogramItem[]
  userId                String
  EventCategoryRelation EventCategoryRelation[]
  locationId            String
}

model EventAssignment {
  id               String                @id @default(cuid())
  createdAt        DateTime              @default(now())
  user             User                  @relation(fields: [userId], references: [id])
  userId           String
  event            Event                 @relation(fields: [eventId], references: [id])
  eventId          String
  assignmentStatus EventAssignmentStatus @default(ACTIVE)
  arrivedAt        DateTime?
  leftAt           DateTime?
  presenceStatus   EventPresenceStatus   @default(NOT_PRESENT)
}

model EventCategory {
  id                    String                  @id @default(cuid())
  createdAt             DateTime                @default(now())
  name                  String
  icon                  String
  colorVariant          ColorVariant            @default(LIME)
  EventCategoryRelation EventCategoryRelation[]
}

model EventCategoryRelation {
  id              String        @id @default(cuid())
  Event           Event         @relation(fields: [eventId], references: [id])
  eventId         String
  EventCategory   EventCategory @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId String
}

model AnnouncementItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
}

model HarmonogramItem {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  from        String
  to          String
  title       String
  description String?

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
}
